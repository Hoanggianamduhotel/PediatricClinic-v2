import React, { useEffect, useState } from "react";
import { DataGrid, GridColDef } from "@mui/x-data-grid";
import { supabase } from "./supabaseClient";

interface VisitHistoryProps {
  benhnhan_id: string;
}

interface Visit {
  id: string;
  ngay_kham: string;
  chan_doan: string;
  status?: string;
}

interface ToaThuocRaw {
  id: string;
  thuoc_id: string;
  so_lan_dung: number;
  so_luong_moi_lan: number;
  tong_so_luong: number;
}

interface ToaThuoc extends ToaThuocRaw {
  ten_thuoc: string;
}

const VisitHistory: React.FC<VisitHistoryProps> = ({ benhnhan_id }) => {
  const [visits, setVisits] = useState<Visit[]>([]);
  const [selectedVisitId, setSelectedVisitId] = useState<string | null>(null);
  const [toaThuoc, setToaThuoc] = useState<ToaThuoc[]>([]);

  useEffect(() => {
    const fetchVisitHistory = async () => {
      const { data, error } = await supabase
        .from("khambenh")
        .select("id, ngay_kham, chan_doan, status")
        .eq("benhnhan_id", benhnhan_id)
        .order("ngay_kham", { ascending: false });

      if (error) {
        console.error("L·ªói l·∫•y l·ªãch s·ª≠ kh√°m:", error);
      } else {
        const validVisits = (data || []).filter(
          (visit: Visit) =>
            !visit.status || visit.status.trim().toLowerCase() !== "hu·ª∑"
        );
        setVisits(validVisits);
      }
    };

    if (benhnhan_id) {
      fetchVisitHistory();
      setSelectedVisitId(null);
      setToaThuoc([]);
    }
  }, [benhnhan_id]);

  const fetchToaThuoc = async (visitId: string) => {
    const { data: toathuocData, error } = await supabase
      .from("toathuoc")
      .select("id, thuoc_id, so_lan_dung, so_luong_moi_lan, tong_so_luong")
      .eq("khambenh_id", visitId);

    if (error) {
      console.error("L·ªói l·∫•y toa thu·ªëc:", error);
      setToaThuoc([]);
      return;
    }

    if (!toathuocData || toathuocData.length === 0) {
      setToaThuoc([]);
      return;
    }

    const thuocIds = toathuocData.map((item) => item.thuoc_id);

    const { data: thuocData, error: thuocError } = await supabase
      .from("thuoc")
      .select("id, ten_thuoc")
      .in("id", thuocIds);

    if (thuocError) {
      console.error("L·ªói l·∫•y t√™n thu·ªëc:", thuocError);
      return;
    }

    const toaThuocWithName: ToaThuoc[] = toathuocData.map((item) => {
      const thuoc = thuocData?.find((t) => t.id === item.thuoc_id);
      return {
        ...item,
        ten_thuoc: thuoc?.ten_thuoc || "Kh√¥ng r√µ",
      };
    });

    setToaThuoc(toaThuocWithName);
  };

  useEffect(() => {
    if (selectedVisitId) {
      fetchToaThuoc(selectedVisitId);
    }
  }, [selectedVisitId]);

  const visitColumns: GridColDef[] = [
    {
      field: "ngay_kham",
      headerName: "Ng√†y kh√°m",
      flex: 1,
    },
    {
      field: "chan_doan",
      headerName: "Ch·∫©n ƒëo√°n",
      flex: 2,
    },
  ];

  const toaThuocColumns: GridColDef[] = [
    { field: "ten_thuoc", headerName: "T√™n thu·ªëc", flex: 1 },
    { field: "so_lan_dung", headerName: "S·ªë l·∫ßn d√πng", flex: 1 },
    { field: "so_luong_moi_lan", headerName: "S·ªë l∆∞·ª£ng/l·∫ßn", flex: 1 },
    { field: "tong_so_luong", headerName: "T·ªïng s·ªë l∆∞·ª£ng", flex: 1 },
  ];

  return (
    <div className="mt-4">
      {visits.length > 0 && (
        <>
          <h2 className="text-xl font-semibold mb-2">üìú L·ªãch s·ª≠ kh√°m b·ªánh</h2>
          <div style={{ height: 300, width: "100%" }}>
            <DataGrid
              rows={visits.map((v) => ({ id: v.id, ...v }))}
              columns={visitColumns}
              onRowClick={(params) => setSelectedVisitId(params.row.id)}
              pageSize={5}
              rowsPerPageOptions={[5]}
            />
          </div>
        </>
      )}

      {selectedVisitId && (
        <div className="mt-6">
          <h2 className="text-xl font-semibold mb-2">üìù Toa thu·ªëc</h2>
          <div style={{ height: 300, width: "100%" }}>
            <DataGrid
              rows={toaThuoc.map((t) => ({ id: t.id, ...t }))}
              columns={toaThuocColumns}
              pageSize={5}
              rowsPerPageOptions={[5]}
            />
          </div>
        </div>
      )}
    </div>
  );
};

export default VisitHistory;