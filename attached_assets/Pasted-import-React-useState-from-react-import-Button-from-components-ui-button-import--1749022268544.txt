import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { Printer, Eye } from "lucide-react";

interface PatientInfoType {
  ho_ten?: string;
  ngay_sinh?: string;
  thang_tuoi?: number;
  can_nang?: string;
  dia_chi?: string;
  so_dien_thoai?: string;
}

interface InToaThuocProps {
  khambenhID: string;
  disabled?: boolean;
  patientInfo?: PatientInfoType | null;
}

interface ToaThuocData {
  tenBenhNhan: string;
  chanDoan: string;
  ngayKham: string;
  tenBacSi: string;
  ngayTaiKham?: string;
  ngaySinh?: string;
  thangTuoi?: number;
  canNang?: string;
  diaChi?: string;
  soDienThoai?: string;
  danhSachThuoc: {
    ten_thuoc: string;
    don_vi: string;
    so_lan_dung: number;
    so_luong_moi_lan: number;
    tong_so_luong: number;
    ghi_chu?: string;
  }[];
}

export default function InToaThuoc({ khambenhID, disabled = false, patientInfo }: InToaThuocProps) {
  const [loading, setLoading] = useState(false);
  const [showPreview, setShowPreview] = useState(false);
  const [toaThuocData, setToaThuocData] = useState<ToaThuocData | null>(null);
  const { toast } = useToast();

  const fetchToaThuocData = async (): Promise<ToaThuocData> => {
    try {
      const response = await apiRequest("GET", `/api/toa-thuoc/${khambenhID}`);
      if (!response.ok) {
        throw new Error("Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu toa thu·ªëc");
      }
      const data = await response.json();
      
      // Merge v·ªõi th√¥ng tin b·ªánh nh√¢n t·ª´ props n·∫øu c√≥
      if (patientInfo) {
        return {
          ...data,
          tenBenhNhan: patientInfo.ho_ten || data.tenBenhNhan,
          ngaySinh: patientInfo.ngay_sinh || data.ngaySinh,
          thangTuoi: patientInfo.thang_tuoi || data.thangTuoi,
          canNang: patientInfo.can_nang || data.canNang,
          diaChi: patientInfo.dia_chi || data.diaChi,
          soDienThoai: patientInfo.so_dien_thoai || data.soDienThoai,
        };
      }
      
      return data;
    } catch (error) {
      throw new Error("L·ªói k·∫øt n·ªëi server khi l·∫•y toa thu·ªëc");
    }
  };

  const generatePrintHTML = (data: ToaThuocData): string => {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <title>Toa Thu·ªëc - ${data.tenBenhNhan}</title>
          <meta charset="utf-8">
          <style>
            @page { 
              size: A5; 
              margin: 7mm 15mm 15mm 15mm; 
            }
            body { 
              font-family: 'Times New Roman', serif; 
              padding: 0; 
              margin: 0; 
              line-height: 1.3;
              font-size: 14px;
            }
            .container { 
              max-width: 100%; 
              padding: 0;
            }
            .header { 
              text-align: center; 
              margin-bottom: 15px; 
              border-bottom: 2px solid #333;
              padding-bottom: 8px;
              margin-top: 10px;
            }
            .header h1 { 
              margin: 0 0 2px; 
              font-size: 28px; 
              color: #2563eb;
              font-weight: bold;
            }
            .header h2 { 
              margin: 0; 
              font-size: 18px; 
              color: #666;
              font-weight: normal;
            }
            .patient-info { 
              margin-bottom: 12px; 
              font-size: 13px;
              line-height: 1.4;
            }
            .patient-row { 
              display: flex; 
              margin-bottom: 4px; 
              justify-content: space-between;
              flex-wrap: wrap;
            }
            .patient-item { 
              display: flex;
              margin-right: 15px;
            }
            .patient-label { 
              font-weight: bold; 
              margin-right: 5px;
              color: #333;
            }
            .patient-value { 
              color: #555;
            }
            .info-section { 
              margin-bottom: 10px; 
            }
            .info-row { 
              display: flex; 
              margin-bottom: 6px; 
            }
            .info-label { 
              font-weight: bold; 
              min-width: 100px; 
              color: #333;
            }
            .info-value { 
              flex: 1; 
            }
            .thuoc-section { 
              margin-top: 8px; 
            }
            .thuoc-list { 
              list-style: none; 
              padding: 0; 
            }
            .thuoc-item { 
              margin-bottom: 0px; 
              padding: 4px 8px; 
              border-left: 3px solid #2563eb; 
              background-color: #f8fafc;
            }
            .thuoc-header {
              display: flex;
              justify-content: space-between;
              align-items: center;
              margin-bottom: 2px;
            }
            .thuoc-name { 
              font-weight: bold; 
              font-size: 15px; 
              color: #1e40af;
              flex: 1;
            }
            .thuoc-total {
              font-weight: bold;
              color: #dc2626;
              font-size: 15px;
            }
            .thuoc-details { 
              color: #374151; 
              font-size: 13px;
            }
            .thuoc-note { 
              font-style: italic; 
              color: #6b7280; 
              margin-top: 2px;
              font-size: 12px;
            }
            .footer { 
              margin-top: 40px; 
              display: flex;
              justify-content: space-between;
              align-items: center;
              border-top: 1px solid #ddd;
              padding-top: 20px;
            }
            .footer-left {
              font-size: 14px;
              color: #374151;
            }
            .footer-right {
              text-align: right;
            }
            .signature-line {
              border-bottom: 1px solid #000;
              width: 200px;
              height: 60px;
              margin-top: 10px;
            }
            .doctor-name {
              font-weight: bold;
              font-size: 14px;
              color: #1e40af;
              margin-top: 5px;
            }
            @media print {
              body { font-size: 12px; }
              .thuoc-item { break-inside: avoid; }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üè• TOA THU·ªêC</h1>
              <h2>Ph√≤ng Kh√°m Nhi Khoa</h2>
            </div>
            
            <div class="patient-info">
              <div class="patient-row">
                <div class="patient-item">
                  <span class="patient-label">H·ªç t√™n:</span>
                  <span class="patient-value">${data.tenBenhNhan}</span>
                </div>
                <div class="patient-item">
                  <span class="patient-label">Ng√†y sinh:</span>
                  <span class="patient-value">${data.ngaySinh ? new Date(data.ngaySinh).toLocaleDateString('vi-VN') : ''}</span>
                </div>
                <div class="patient-item">
                  <span class="patient-label">Tu·ªïi:</span>
                  <span class="patient-value">${data.thangTuoi ? Math.floor(data.thangTuoi / 12) + ' tu·ªïi ' + (data.thangTuoi % 12) + ' th√°ng' : ''}</span>
                </div>
              </div>
              <div class="patient-row">
                <div class="patient-item">
                  <span class="patient-label">CN:</span>
                  <span class="patient-value">${data.canNang || ''} kg</span>
                </div>
                <div class="patient-item">
                  <span class="patient-label">ƒê·ªãa ch·ªâ:</span>
                  <span class="patient-value">${data.diaChi || ''}</span>
                </div>
                <div class="patient-item">
                  <span class="patient-label">SƒêT:</span>
                  <span class="patient-value">${data.soDienThoai || ''}</span>
                </div>
              </div>
            </div>
            
            <div class="info-section">
              <div class="info-row">
                <span class="info-label">Ch·∫©n ƒëo√°n:</span>
                <span class="info-value">${data.chanDoan}</span>
              </div>
            </div>

            <div class="thuoc-section">
              ${data.danhSachThuoc.length > 0 ? `
                <ul class="thuoc-list">
                  ${data.danhSachThuoc.map((thuoc, index) => `
                    <li class="thuoc-item">
                      <div class="thuoc-header">
                        <div class="thuoc-name">${index + 1}. ${thuoc.ten_thuoc}</div>
                        <div class="thuoc-total">${thuoc.tong_so_luong} ${thuoc.don_vi}</div>
                      </div>
                      <div class="thuoc-details">
                        <strong>Li·ªÅu d√πng:</strong> ${thuoc.so_lan_dung} l·∫ßn/ng√†y, 
                        m·ªói l·∫ßn ${thuoc.so_luong_moi_lan} ${thuoc.don_vi}
                      </div>
                      ${thuoc.ghi_chu ? `<div class="thuoc-note">Ghi ch√∫: ${thuoc.ghi_chu}</div>` : ''}
                    </li>
                  `).join('')}
                </ul>
              ` : `
                <div style="text-align: center; color: #6b7280; font-style: italic;">
                  Kh√¥ng c√≥ thu·ªëc trong toa
                </div>
              `}
            </div>

            <div class="footer">
              <div class="footer-left">
                <div><strong>Ng√†y t√°i kh√°m:</strong> ${data.ngayTaiKham ? new Date(data.ngayTaiKham).toLocaleDateString('vi-VN') : '___/___/______'}</div>
                <div style="margin-top: 10px;">Vui l√≤ng theo d√µi t√¨nh tr·∫°ng s·ª©c kh·ªèe v√† t√°i kh√°m theo h·∫πn</div>
              </div>
              <div class="footer-right">
                <div><strong>Ng√†y kh√°m:</strong> ${new Date(data.ngayKham).toLocaleDateString('vi-VN')}</div>
                <div style="margin-top: 8px;"><strong>B√°c sƒ© kh√°m b·ªánh</strong></div>
                <div class="doctor-name">${data.tenBacSi}</div>
                <div class="signature-line"></div>
              </div>
            </div>
          </div>
        </body>
      </html>
    `;
  };

  const handlePreview = async () => {
    if (toaThuocData) {
      setShowPreview(!showPreview);
      return;
    }

    setLoading(true);
    try {
      const data = await fetchToaThuocData();
      setToaThuocData(data);
      setShowPreview(true);
      
      toast({
        title: "Th√†nh c√¥ng",
        description: "ƒê√£ t·∫£i d·ªØ li·ªáu toa thu·ªëc",
      });
    } catch (error: any) {
      toast({
        title: "L·ªói",
        description: error.message || "Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu toa thu·ªëc",
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  };

  const handlePrint = async () => {
    setLoading(true);
    try {
      let data = toaThuocData;
      if (!data) {
        data = await fetchToaThuocData();
        setToaThuocData(data);
      }

      if (data.danhSachThuoc.length === 0) {
        toast({
          title: "C·∫£nh b√°o",
          description: "Toa thu·ªëc tr·ªëng, kh√¥ng th·ªÉ in",
          variant: "destructive",
        });
        return;
      }

      const printWindow = window.open("", "_blank", "width=800,height=600");
      if (!printWindow) {
        toast({
          title: "L·ªói",
          description: "Kh√¥ng th·ªÉ m·ªü c·ª≠a s·ªï in. Vui l√≤ng cho ph√©p popup trong tr√¨nh duy·ªát",
          variant: "destructive",
        });
        return;
      }

      printWindow.document.write(generatePrintHTML(data));
      printWindow.document.close();
      printWindow.focus();
      
      // Wait for content to load then print
      setTimeout(() => {
        printWindow.print();
        printWindow.onafterprint = () => {
          printWindow.close();
        };
      }, 500);

      toast({
        title: "Th√†nh c√¥ng",
        description: "ƒê√£ g·ª≠i toa thu·ªëc ƒë·∫øn m√°y in",
      });
    } catch (error: any) {
      toast({
        title: "L·ªói in toa thu·ªëc",
        description: error.message || "Kh√¥ng th·ªÉ in toa thu·ªëc",
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  };

  if (!khambenhID) {
    return null;
  }

  return (
    <div className="space-y-4">
      <div className="flex gap-3">
        <Button
          onClick={handlePreview}
          variant="outline"
          disabled={loading || disabled}
          className="flex items-center gap-2"
        >
          <Eye className="h-4 w-4" />
          {showPreview ? "·∫®n xem tr∆∞·ªõc" : "Xem tr∆∞·ªõc"}
        </Button>
        
        <Button
          onClick={handlePrint}
          disabled={loading || disabled}
          className="flex items-center gap-2 bg-blue-600 hover:bg-blue-700"
        >
          <Printer className="h-4 w-4" />
          {loading ? "ƒêang x·ª≠ l√Ω..." : "In toa thu·ªëc"}
        </Button>
      </div>

      {showPreview && toaThuocData && (
        <div className="mt-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border">
          <h4 className="font-semibold text-gray-900 dark:text-gray-100 mb-3">
            üìã Xem tr∆∞·ªõc toa thu·ªëc
          </h4>
          <div className="space-y-2 text-sm">
            <div><strong>B·ªánh nh√¢n:</strong> {toaThuocData.tenBenhNhan}</div>
            <div><strong>Ch·∫©n ƒëo√°n:</strong> {toaThuocData.chanDoan}</div>
            <div><strong>Ng√†y kh√°m:</strong> {new Date(toaThuocData.ngayKham).toLocaleDateString('vi-VN')}</div>
            <div><strong>B√°c sƒ©:</strong> {toaThuocData.tenBacSi}</div>
            
            <div className="mt-3">
              <strong>Danh s√°ch thu·ªëc ({toaThuocData.danhSachThuoc.length} lo·∫°i):</strong>
              {toaThuocData.danhSachThuoc.length > 0 ? (
                <ul className="mt-2 space-y-2">
                  {toaThuocData.danhSachThuoc.map((thuoc, index) => (
                    <li key={index} className="bg-white dark:bg-gray-700 p-2 rounded border-l-4 border-blue-500">
                      <div className="font-medium text-blue-700 dark:text-blue-300">
                        {index + 1}. {thuoc.ten_thuoc}
                      </div>
                      <div className="text-gray-600 dark:text-gray-300">
                        {thuoc.so_lan_dung} l·∫ßn/ng√†y √ó {thuoc.so_luong_moi_lan} {thuoc.don_vi} 
                        = {thuoc.tong_so_luong} {thuoc.don_vi}
                      </div>
                      {thuoc.ghi_chu && (
                        <div className="text-gray-500 dark:text-gray-400 italic text-xs">
                          {thuoc.ghi_chu}
                        </div>
                      )}
                    </li>
                  ))}
                </ul>
              ) : (
                <div className="text-gray-500 dark:text-gray-400 italic mt-2">
                  Ch∆∞a c√≥ thu·ªëc trong toa
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
